<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                            http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
                             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- #################################################################### -->
	<!-- servlet-context -->
	<!-- #################################################################### -->

	<!-- ==================================================================== -->
	<!-- ViewResolver-Tiles 설정 -->
	<!-- ==================================================================== -->
	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="1" />
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/views/tiles-def.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- ==================================================================== -->
	<!-- annotation : spring MVC 패턴의 @Controller 프로그래밍 모델을 활성화 시킨다. -->
	<!-- ==================================================================== -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- ==================================================================== -->
	<!-- @Transactional등 트랜잭션 관련 애노테이션을 활성화 한다. -->
	<!-- (주의:servlet-context.xml 에 위치해야만 트랜잭션(커밋,롤백) 처리가 된다. -->
	<!-- ==================================================================== -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- ==================================================================== -->
	<!-- 하위 모든 패키지에 있는 파일의 어노테이션을 스캔해서 빈으로 등록 -->
	<!-- Servlet 개별로 설정하지 않을 경우 root-context.xml 에도 선언할것 -->
	<!-- ==================================================================== -->
	<context:component-scan base-package="com.zangel.*" >
	
		<!-- 예외는 아래 추가
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		-->
	</context:component-scan>

	<!-- ==================================================================== -->
	<!-- resource 경로 지정 -->
	<!-- servlet 에서 root(/) 를 가져가는 url 패턴으로 사용한다면 -->
	<!-- 리소스(img파일등)을 view 단에서 직접 접근 할수가 없기때문에 -->
	<!-- 예외 폴더를 설정함으로서 view단에서 직접적인 접근이 가능하게 한다. -->
	<!-- ==================================================================== -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/assets/**" location="/assets/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/upload/**" location="/upload/" />

	
	<!-- ==================================================================== -->
	<!-- properties 설정의 애플리케이션 서버를 재시작을 하지 않고 자동 로딩을 위해 설정 cacheSeconds 초단위 -->
	<!-- ==================================================================== -->
<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/spring/constant</value> <!-- properties 경로 위치  -->
			</list>
		</property>
		<property name="cacheSeconds" value="5" /> <!-- 초단위로 로딩  -->
	</bean>

	<bean id="messageSourceAccessor"
		class="org.springframework.context.support.MessageSourceAccessor">
		<constructor-arg ref="messageSource" />
	</bean>



<mvc:interceptors>

		<!-- 공통코드 interceptor -->
		<mvc:interceptor>
		    
			<mvc:mapping path="/**/*" />
			<mvc:exclude-mapping path="/login.do" />
			<mvc:exclude-mapping path="/loginJson.do" />
			<mvc:exclude-mapping path="/app/test.do" />
			<bean class="com.zangel.Interceptor" />
		
		</mvc:interceptor>

</mvc:interceptors>

</beans>